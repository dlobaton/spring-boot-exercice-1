package com.example.ratesplatform.shared.common.dtos;

import com.example.ratesplatform.shared.common.annotations.JacksonAutoDetection;
import com.example.ratesplatform.shared.common.utils.Constants;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Builder;
import lombok.extern.jackson.Jacksonized;


/**
 * Class used in endpoint responses.
 * All endpoints will have the same output structure, which is as follows:
 * - HTTP status description
 * - Message describing how the execution of the requested action has gone
 * - Message identifier
 * - Data: wrapper that will contain the information returned by each endpoint
 * - List containing the external resources used by the application to perform its function.
 * It will show the status of each resource used.
 *
 * @param status           Final result after performing the requested operation
 * @param message          Message with the description associated with the message id
 * @param messageId        Identifier generated by the service representing the final result of the operation performed
 * @param data             Information returned by the endpoint called
 */
@Jacksonized
@Builder
@JacksonAutoDetection
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public record SuccessfulResponseDto<T>(

        @JsonProperty(STATUS_NODE)
        @Schema(name = STATUS_NODE,
                example = "OK",
                type = Constants.OPEN_API_STRING_TYPE,
                requiredMode = Schema.RequiredMode.REQUIRED,
                description = "HTTP status description") String status,
        @JsonProperty(Constants.MESSAGE) @Schema(name = Constants.MESSAGE,
                example = "OK",
                type = Constants.OPEN_API_STRING_TYPE,
                requiredMode = Schema.RequiredMode.REQUIRED,
                description = "Message description associated with the message id") String message,
        @JsonProperty(MESSAGE_ID_NODE) @Schema(name = MESSAGE_ID_NODE,
                example = "00",
                type = Constants.OPEN_API_STRING_TYPE,
                requiredMode = Schema.RequiredMode.REQUIRED,
                description = "Id generated by the application representing the response status") String messageId,
        @JsonProperty(DATA_NODE) T data
) {
    // Node names in the JSON
    private static final String STATUS_NODE = "status";
    private static final String MESSAGE_ID_NODE = "messageId";
    private static final String DATA_NODE = "data";

}
